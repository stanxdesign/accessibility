//=== theme & font switcher start ===
const fontSizeConfigs = [
	{ id: 'switch-font-size-M', text: '標準', ariaLabel: '標準文字大小', defaultActive: true, style: 'M' },
	{ id: 'switch-font-size-L', text: '加大', ariaLabel: '加大一級大小', style: 'L' },
	{ id: 'switch-font-size-XL', text: '特大', ariaLabel: '放到最大', style: 'XL' }
];

const themeConfigs = [
	{ id: 'switch-theme-light', text: '淺色', ariaLabel: '切換至淺色配色', defaultActive: true, style: 'light' },
	{ id: 'switch-theme-dark', text: '深色', ariaLabel: '切換至深色配色', style: 'dark' },
	{ id: 'switch-theme-contrast', text: '高亮', ariaLabel: '切換至高亮配色', style: 'contrast' },
	{ id: 'switch-theme-dark2', text: '淺色2', ariaLabel: '切換至深色配色', style: 'light2' }
];

function createButtons(containerClass, configArray, attributeName) {
	const container = document.querySelector(containerClass);
	if (container) {
		configArray.forEach(config => {
			const button = document.createElement('button');
			button.type = 'button';
			button.id = config.id;
			button.className = `btn ${config.defaultActive ? 'active' : ''}`;
			button.textContent = config.text;
			button.setAttribute('aria-label', config.ariaLabel);
			// 設置初始 aria-pressed 與 defaultActive 同步
			button.setAttribute('aria-pressed', config.defaultActive ? 'true' : 'false');
			container.appendChild(button);

			button.addEventListener('click', () => {
					const groupButtons = container.querySelectorAll('button');
					groupButtons.forEach(btn => {
							btn.classList.remove('active');
							btn.setAttribute('aria-pressed', 'false'); // 移除活躍狀態時設為 false
					});
					button.classList.add('active');
					button.setAttribute('aria-pressed', 'true'); // 添加活躍狀態時設為 true
					const value = config.style;
					document.documentElement.setAttribute(attributeName, value);
			});
		});
	};
}

createButtons('#switch-font-size', fontSizeConfigs, 'data-font');
createButtons('#switch-theme', themeConfigs, 'data-bs-theme');
//=== theme & font switcher end ===

// NAV
window.addEventListener("scroll", function () {
	const nav = document.querySelector('#navbarMain'); // 選取 <nav>
	const scrollPosition = window.scrollY; // 取得捲動高度

	nav.classList.toggle("active", scrollPosition > 500);
});

// slider
document.addEventListener('DOMContentLoaded', function () {
	swiffyslider.init();

	const sliders = document.querySelectorAll('.swiffy-slider');

	sliders.forEach(slider => {
		const slides = slider.querySelectorAll('.slider-container > li');
		swiffyslider.onSlideEnd(slider, function () {
			slides.forEach(slide => {
				if (slide.classList.contains('slide-visible')) {
					slide.setAttribute('aria-hidden', 'false');
				} else {
					slide.setAttribute('aria-hidden', 'true');
				}
			});
		}, 125);
	});
});

const togglePassword = document.querySelector('#togglePassword');
if (togglePassword) {
	togglePassword.addEventListener('click', function () {
		const passwordField = document.querySelector('#password');
		if (passwordField) {
			const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
			passwordField.setAttribute('type', type);
			this.classList.toggle('active');
		}
	});
}

// TABS
document.addEventListener("DOMContentLoaded", function () {
	document.querySelectorAll(".tab-switch").forEach(tabsContainer => {
			const tabs = tabsContainer.querySelectorAll(".tab-bar-btn");
			const contents = tabsContainer.querySelectorAll(".tab-content-info");

			tabs.forEach((tab, index) => {
					tab.addEventListener("click", function () {
							// 移除當前 tabsContainer 內所有 tab 的 active 狀態
							tabs.forEach(t => t.classList.remove("active"));
							contents.forEach(content => {
									content.style.height = "0px";
									content.classList.remove("active");

									// 停用內容中的 button 的 tabindex
									content.querySelectorAll("button").forEach(btn => btn.setAttribute("tabindex", "-1"));
							});

							// 設置當前點擊的 tab 為 active
							tab.classList.add("active");

							// 取得對應的 tab-content 並展開動畫
							const content = contents[index];
							content.classList.add("active");
							content.style.height = content.scrollHeight + "px";

							// 啟用當前內容中的 button 的 tabindex
							content.querySelectorAll("button").forEach(btn => btn.setAttribute("tabindex", "0"));
					});
			});
	});
});