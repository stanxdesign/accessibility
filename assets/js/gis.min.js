/*
表單無障礙互動注意事項：
1. 可被TAB選取的物件需要依照DOM的順序來FOCUS
2. 所有可被TAB選取的物件，如果在VIEWPORT中不可見，則不應該被FOCUS
3. 呈2.不可被 FOCUS元素需要 加上 tabindex="-1" 以及 aria-disabled="true"，並在可見時移除這兩個屬性
4. 包含沒有被切換到的頁籤、收合的項目、點選才會展開的抽屜，都必須要處理 tabindex
5. 少數特殊的狀況下，需使用 tabindex="1" 來強制設定順序。但這樣的情況應該要避免
*/
const FilterManager = {
  init() {
    // 選取所有 .result-all-item 容器
    const containers = document.querySelectorAll('.result-all-item');
    containers.forEach(container => this.setupContainer(container));
  },

  setupContainer(container) {
    // 選取容器內的 radio 和 button
    const radios = container.querySelectorAll('.items label[data-type] input[type="radio"]');
    const buttons = container.querySelectorAll('.result-right.levels .level .items button');
    const labels = container.querySelectorAll('.items label[data-type]');

    // 為每個 radio 綁定 change 事件
    radios.forEach(radio => {
      radio.addEventListener('change', () => this.handleFilterChange(container, buttons));
    });

    // 為每個 label 綁定 keydown 事件以支援 Enter 鍵
    labels.forEach(label => {
      label.addEventListener('keydown', (event) => {
        if (event.key === 'Enter' || event.keyCode === 13) {
          event.preventDefault(); // 防止 Enter 觸發其他行為（如表單提交）
          const radio = label.querySelector('input[type="radio"]');
          if (radio && !radio.checked) {
            radio.checked = true; // 選中 radio
            radio.dispatchEvent(new Event('change', { bubbles: true })); // 觸發 change 事件
          }
        }
      });
    });
  },

  handleFilterChange(container, buttons) {
    // 選取容器內當前選中的 radio
    const selectedRadio = container.querySelector('.items label[data-type] input[type="radio"]:checked');
    const selectedTag = selectedRadio ? selectedRadio.parentElement.getAttribute('data-type') : null;

    // 處理按鈕顯示邏輯
    buttons.forEach(button => {
      const shouldShow = !selectedTag || selectedTag === 'filter-all' || button.classList.contains(selectedTag);

      if (shouldShow) {
        button.classList.remove('hidden');
        button.removeAttribute('tabindex');
        button.removeAttribute('aria-hidden');
      } else {
        button.classList.add('hidden');
        button.setAttribute('tabindex', '-1');
        button.setAttribute('aria-hidden', 'true');
      }
    });
  }
};

document.addEventListener('DOMContentLoaded', () => {
  FilterManager.init();
});

const resultPanelBtn = document.querySelector('#resultPanelBtn');
if(resultPanelBtn){
	resultPanelBtn.addEventListener('click', (e) => {
		e.preventDefault();
		e.currentTarget.parentElement.classList.toggle('active');
	});
}

// 互動功能：BOOTSTRAP 原生 Modal POPUP
const polygons = document.querySelectorAll('#pageGIS polygon');
polygons.forEach(polygon => {
		polygon.addEventListener('click', (e) => {
				const id = e.target.getAttribute('data-id');
				const info = e.target.getAttribute('data-info');
		});

		// 鍵盤事件：Enter 或 Space 觸發
		polygon.addEventListener('keydown', (e) => {
				if (e.key === 'Enter' || e.key === ' ') {
						e.preventDefault();
						const id = e.target.getAttribute('data-id');
						const info = e.target.getAttribute('data-info');
						// alert(`鍵盤觸發 ${info} (ID: ${id})`);
				}
		});
});

// 互動功能：搜尋框 展開 控制
const resulTarget = document.querySelector('#resultPanel');
const resultPanelToggle = document.querySelector('#resultPanelToggle');
const resulSend = document.querySelector('#send');
const moreOptionBtn = document.querySelector('#moreOptionBtn');
const moreOptionTaget = document.querySelector('#filterPanel');
const moreOptioninputs = document.querySelectorAll('.disabledCheck');
const tagBtns = document.querySelector('#moreTags');
const mapLayer = document.querySelector('#map');

if(resulSend && resultPanelToggle && resulTarget){
	resulSend.addEventListener('click', () => {
		resulSend.blur(); // 讓點擊的按鈕失去焦點
		document.activeElement.blur(); // 讓當前聚焦的元素（例如表單輸入框）失去焦點
		resulTarget.classList.toggle('active');
		resultPanelBtn.classList.add('active');
	});

	resultPanelToggle.addEventListener('click', () => {
		resultPanelToggle.blur(); // 讓點擊的按鈕失去焦點
		document.activeElement.blur(); // 讓當前聚焦的元素（例如表單輸入框）失去焦點
		resulTarget.classList.toggle('active');
		resultPanelBtn.classList.add('active');
		moreOptionTaget.classList.remove('active');
	});
}

// === 初始設置所有 disabledCheck 元素
moreOptioninputs.forEach(ta => {
	ta.setAttribute('tabindex', '-1');
	ta.setAttribute('aria-disabled', 'true');
});

if(mapLayer){
	mapLayer.addEventListener('click', () => {
		moreOptionTaget.classList.remove('active');
	});
}

if(resulTarget){
	resulTarget.addEventListener('click', () => {
		moreOptionTaget.classList.remove('active');
	});
}

if(moreOptionTaget){
	moreOptionTaget.addEventListener('click', (event) => {
    if (event.target.closest('#resultPanelBtn')) {
      // 當點擊 #BTN 時執行的行為
      moreOptionTaget.classList.remove('active'); // 例如移除 active 類
    } else {
      // 當點擊 #filterPanel 或其他子元素（包括 LABEL）時執行的行為
      moreOptionTaget.classList.add('active');
    }
  });
}

if(moreOptionBtn){
	moreOptionBtn.addEventListener('click', () => {
		if (tagBtns.classList.contains('active')) {
			tagBtns.classList.remove('active');
			objHidden(moreOptioninputs, '');
			moreOptionBtn.textContent	= '更多條件';
		} else {
			tagBtns.classList.add('active');
			objShowed(moreOptioninputs, '');
			moreOptionBtn.textContent	= '隱藏更多條件';
		}
	});
}

const requestLocation = document.getElementById("requestLocation");
const locationOutput = document.getElementById("locationOutput");
const getGPS = document.getElementById("getGPS");
if(requestLocation && locationOutput && getGPS){
	requestLocation.addEventListener("click", function () {
		if (navigator.geolocation) {
			navigator.geolocation.getCurrentPosition(
				(position) => {
					const latitude = position.coords.latitude;
					const longitude = position.coords.longitude;
					locationOutput.textContent = `緯度: ${latitude}, 經度: ${longitude}`;
					getGPS.classList.add("active");
					getGPS.textContent = "當前位置";
				},
				(error) => {
					switch (error.code) {
						case error.PERMISSION_DENIED:
							locationOutput.textContent = "您拒絕了定位請求。";
							break;
						case error.POSITION_UNAVAILABLE:
							locationOutput.textContent = "無法取得定位資訊。";
							break;
						case error.TIMEOUT:
							locationOutput.textContent = "定位請求超時。";
							break;
						default:
							locationOutput.textContent = "發生未知錯誤。";
					}
				}
			);
		} else {
			locationOutput.textContent = "您的瀏覽器不支援定位功能。";
		}
	});
}


// === 資料模擬使用 請依正式站情況刪除

const markers = document.querySelectorAll('.marker');
markers.forEach(marker => {
	marker.addEventListener('click', (e) => {
				const id = e.target.getAttribute('data-id');
				const info = e.target.getAttribute('data-info');
				// alert(`點擊了 ${info} (ID: ${id})`);
		});

		// 鍵盤事件：Enter 或 Space 觸發
		marker.addEventListener('keydown', (e) => {
				if (e.key === 'Enter' || e.key === ' ') {
						e.preventDefault();
						const id = e.target.getAttribute('data-id');
						const info = e.target.getAttribute('data-info');
						// alert(`鍵盤觸發 ${info} (ID: ${id})`);
				}
		});
});

// 互動功能：圖台內之小型 POPUP，模擬效果使用
const gispopup = document.querySelectorAll('.gispopup');
gispopup.forEach(popup => {
    const modalDismiss = popup.querySelector('.modal-dismiss');
    if (modalDismiss) {
        modalDismiss.addEventListener('click', (e) => {
            popup.classList.toggle('active'); // 切換 .active class
        });
    }
});