/*
表單無障礙互動注意事項：
1. 可被TAB選取的物件需要依照DOM的順序來FOCUS
2. 所有可被TAB選取的物件，如果在VIEWPORT中不可見，則不應該被FOCUS
3. 呈2.不可被 FOCUS元素需要 加上 tabindex="-1" 以及 aria-disabled="true"，並在可見時移除這兩個屬性
4. 包含沒有被切換到的頁籤、收合的項目、點選才會展開的抽屜，都必須要處理 tabindex
5. 少數特殊的狀況下，需使用 tabindex="1" 來強制設定順序。但這樣的情況應該要避免
*/

const itemTa = document.querySelectorAll('.items label.fa');
itemTa.forEach(item => {
		item.addEventListener('click', (e) => {
			e.currentTarget.classList.toggle('active');
		});
		item.addEventListener('keydown', (e) => {
			if (e.key === 'Enter' || e.key === ' ') {
				e.currentTarget.classList.toggle('active');
			}
	});
});

const resultPanelBtn = document.querySelector('#resultPanelBtn');
if(resultPanelBtn){
	resultPanelBtn.addEventListener('click', (e) => {
		e.preventDefault();
		e.currentTarget.parentElement.classList.toggle('active');
	});
}



// 互動功能：圖台內之小型 POPUP，模擬效果使用
const gispopup = document.querySelectorAll('.gispopup');
gispopup.forEach(popup => {
    const modalDismiss = popup.querySelector('.modal-dismiss');
    if (modalDismiss) {
        modalDismiss.addEventListener('click', (e) => {
            popup.classList.toggle('active'); // 切換 .active class
        });
    }
});


// 互動功能：BOOTSTRAP 原生 Modal POPUP
const polygons = document.querySelectorAll('#pageGIS polygon');
polygons.forEach(polygon => {
		polygon.addEventListener('click', (e) => {
				const id = e.target.getAttribute('data-id');
				const info = e.target.getAttribute('data-info');
		});

		// 鍵盤事件：Enter 或 Space 觸發
		polygon.addEventListener('keydown', (e) => {
				if (e.key === 'Enter' || e.key === ' ') {
						e.preventDefault();
						const id = e.target.getAttribute('data-id');
						const info = e.target.getAttribute('data-info');
						// alert(`鍵盤觸發 ${info} (ID: ${id})`);
				}
		});
});

const markers = document.querySelectorAll('.marker');
markers.forEach(marker => {
	marker.addEventListener('click', (e) => {
				const id = e.target.getAttribute('data-id');
				const info = e.target.getAttribute('data-info');
				// alert(`點擊了 ${info} (ID: ${id})`);
		});

		// 鍵盤事件：Enter 或 Space 觸發
		marker.addEventListener('keydown', (e) => {
				if (e.key === 'Enter' || e.key === ' ') {
						e.preventDefault();
						const id = e.target.getAttribute('data-id');
						const info = e.target.getAttribute('data-info');
						// alert(`鍵盤觸發 ${info} (ID: ${id})`);
				}
		});
});

// 互動功能：展開搜尋結果
const resulTarget = document.querySelector('#resultPanel');
const resulSend = document.querySelector('#send');

resulSend.addEventListener('click', () => {
	resulTarget.classList.toggle('active');
	resultPanelBtn.classList.add('active');
});

// 互動功能：展開更多條件
const moreOptionBtn = document.querySelector('#moreOptionBtn');
const moreOptionTaget = document.querySelector('#filterPanel');
const moreOptioninputs = document.querySelectorAll('.disabledCheck');

// === 初始設置所有 disabledCheck 元素
moreOptioninputs.forEach(ta => {
	ta.setAttribute('tabindex', '-1');
	ta.setAttribute('aria-disabled', 'true');
});

if(moreOptionBtn){
	moreOptionBtn.addEventListener('click', () => {
		moreOptionTaget.classList.toggle('active');
		if (moreOptionTaget.classList.contains('active')) {
				// 移除 active 時的處理
				moreOptioninputs.forEach(ta => {
					ta.disabled = false; // 啟用
					ta.removeAttribute('tabindex'); // 恢復 Tab 導覽
					ta.setAttribute('aria-disabled', 'false'); // 更新無障礙標示
				});
				moreOptionBtn.textContent	= '關閉更多條件';
		} else {
				// 啟用 active 時的處理
				moreOptioninputs.forEach(ta => {
					ta.disabled = true; // 停用
					ta.value = ''; // 清除內容
					ta.setAttribute('tabindex', '-1'); // 禁止 Tab 導覽
					ta.setAttribute('aria-disabled', 'true'); // 無障礙標示
				});
				moreOptionBtn.textContent	= '更多條件';
		}
	});
}