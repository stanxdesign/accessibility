//=== theme & font switcher start ===

// 設定 Cookie
function setCookie(name, value) {
	document.cookie = `${name}=${value}; path=/; max-age=31536000`; // 1年有效
}
// 取得 Cookie 值
function getCookie(name) {
	return document.cookie.split('; ').find(row => row.startsWith(name + '='))?.split('=')[1];
}

// 字體大小設定
const fontSizeConfigs = [
	{ id: 'switch-font-size-M', text: '標準', ariaLabel: '標準文字大小', defaultActive: true, style: 'M' },
	{ id: 'switch-font-size-L', text: '加大', ariaLabel: '加大一級大小', style: 'L' },
	{ id: 'switch-font-size-XL', text: '特大', ariaLabel: '放到最大', style: 'XL' }
];

// 主題設定
const themeConfigs = [
	{ id: 'switch-theme-light', text: '淺色', ariaLabel: '切換至淺色配色', defaultActive: true, style: 'light' },
	{ id: 'switch-theme-dark', text: '深色', ariaLabel: '切換至深色配色', style: 'dark' },
	{ id: 'switch-theme-contrast', text: '鮮明', ariaLabel: '切換至鮮明配色', style: 'contrast' }
];

// 建立按鈕並按鈕並記錄選擇
function createButtons(containerClass, configArray, attributeName, cookieName) {
	const container = document.querySelector(containerClass);
	if (!container) return;

	configArray.forEach(config => {
		const button = document.createElement('button');
		button.type = 'button';
		button.id = config.id;
		button.className = 'btn';
		button.textContent = config.text;
		button.setAttribute('aria-label', config.ariaLabel);
		button.setAttribute('aria-pressed', 'false');
		container.appendChild(button);	//製作按鈕

		//事件綁定
		button.addEventListener('click', () => {
			//處理按鈕狀態
			container.querySelectorAll('button').forEach(btn => {
				btn.classList.remove('active');
				btn.setAttribute('aria-pressed', 'false');
			});
			button.classList.add('active');
			button.setAttribute('aria-pressed', 'true');

			//設定主題
			const value = config.style;
			document.documentElement.setAttribute(attributeName, value);
			setCookie(cookieName, value);
		});
	});

	// 讀取 Cookie 並套用主題
	const savedValue = getCookie(cookieName);
	if (savedValue) {
		document.documentElement.setAttribute(attributeName, savedValue);
		const activeButton = container.querySelector(`button[id*='${savedValue}']`);
		if (activeButton) {
			container.querySelectorAll('button').forEach(btn => {
				btn.classList.remove('active');
				btn.setAttribute('aria-pressed', 'false');
			});
			activeButton.classList.add('active');
			activeButton.setAttribute('aria-pressed', 'true');
		}
	}
}

// 建立字體大小+主題切換按鈕
createButtons('#switch-font-size', fontSizeConfigs, 'data-font', 'fontSize');
createButtons('#switch-theme', themeConfigs, 'data-bs-theme', 'theme');
//=== theme & font switcher end ===


// NAV
window.addEventListener("scroll", function () {
	const nav = document.querySelector('#navbarMain'); // 選取 <nav>
	const scrollPosition = window.scrollY; // 取得捲動高度

	nav.classList.toggle("active", scrollPosition > 500);
});

// 密碼欄位切換按鈕
const togglePassword = document.querySelector('#togglePassword');
if (togglePassword) {
	togglePassword.addEventListener('click', function () {
		const passwordField = document.querySelector('#password');
		if (passwordField) {
			const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
			passwordField.setAttribute('type', type);
			this.classList.toggle('active');
		}
	});
}

// debounce
function debounce(fn, delay = 500) {
  let timer;

  return (...args) => {
    clearTimeout(timer);
    timer = setTimeout(() => {
      fn(...args);
    }, delay);
  };
}